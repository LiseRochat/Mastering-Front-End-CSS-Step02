/* Variables */
:root {
    --color1: #ede4d0;
    --color2: pink;
    --color3: #393b4b;
    --color4: rgb(18, 19, 19);
}

/* Mini Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    /* center/cover : photo à l'echelle */
    background: url('./assets/bg.jpg') center/cover;
    /* Le body prend toute la taille de l'écran de l'utilisateur */
    height:100vh;
    /* integration d'une fonte family */
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    /* Apelle d'une variable couleur */
    color: var(--color1);
    /* Reglage FlexBox */
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}

.card,
.link {
    /* Couleur avec effet de transparence */
    background: rgba(0, 0, 0, 0.459);
    /* Calcul : largeur de 100% - 50px */
    /* ATTNTION ESPACE autour de l'opérateur arythmitique */
    width: calc(100% - 50px);
    /* haut gauche/droite bas */
    padding: 20px 20px 6px;
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.532);
    border-radius: 5px;
    /* Créer un flou */
    backdrop-filter: blur(5px);
}

/************************************ Pseudo Element After / Before ************************************/
/* Permet d'accoler un élément avant ou après une balise htlm */

.card:before {
    /* On récupere le code sur le site html symbols */
    content: "\2730";
    /* On positionne l'élément ou on veut */
    position: absolute;
    top: 14px;
    right: 20px;
    /* Agrandir l'icone toujours en rem */
    font-size: 2.4rem;
}

h1{
    margin-bottom: 24px;
}

/************************************ Rapelle grid ************************************/
/* Permet de repartir de maniere tres précise les éléments sur la page */

.grid-container {
    display: grid;
    grid-template-columns: 20% 80%;
}

/************************************ Polygone ************************************/
.polygon-container {
    /* Ombre du polygone, l'ombre reprend exactement la forme du polygone */
    filter: drop-shadow(-1px 6px 3px var(--color2));
    /* Centrer l'élément : le polygone -> METTRE LE parent en GRID !!*/
    place-self: center;
}
.polygon {
    /* Creation du polygone */
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
    /* Gradient */
    /* Couleur au polygone */
    background: linear-gradient(135deg, var(--color2) 0%, var(--color1) 100%);
    /* On lui donne une taille */
    height: 100px;
    width: 100px;
}

/************************************ div link ************************************/
.link {
    margin-top:30px;
}
 .link > a {
     color:var(--color1);
 }